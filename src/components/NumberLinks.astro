---
interface Props {
  links: { href: string; label: string }[];
}

const { links } = Astro.props;
---

<ul class="number-links">
  {
    links.map((link, index) => (
      <li>
        <a
          aria-current={Astro.url.pathname === link.href ? "page" : undefined}
          class:list={[
            "number-links__link",
            Astro.url.pathname.startsWith(link.href) && "number-links__link--active",
          ]}
          href={link.href}
        >
          <span aria-hidden="true">{index + 1}</span>
          <span class="sr-only">{link.label}</span>
        </a>
      </li>
    ))
  }
</ul>

<style>
  .number-links {
    display: flex;
    justify-content: var(--justify-content, center);
    flex-direction: var(--flex-direction, row);
    list-style-type: none;
    padding: 0;
    margin: 0;
    gap: var(--gap, 1rem);

    font-size: var(--fs-h4);
    font-family: var(--ff-serif);
  }

  .number-links__link {
    display: grid;
    place-items: center;
    width: 2.5rem;
    aspect-ratio: 1;
    border: 1px solid hsl(var(--clr-white) / 25%);
    border-radius: 50%;

    color: hsl(var(--clr-white));
    text-decoration: none;
  }

  .number-links__link:hover {
    border-color: hsl(var(--clr-white));
  }

  .number-links__link--active {
    color: hsl(var(--clr-dark));
    background-color: hsl(var(--clr-white));
  }

  @media (min-width: 48rem) {
    .number-links__link {
      width: 3.75rem;
    }
  }

  @media (min-width: 70rem) {
    .number-links__link {
      width: 5rem;
    }
  }
</style>
